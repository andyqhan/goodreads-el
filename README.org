#+TITLE: goodreads-el

#+begin_quote
Unfortunately, Goodreads has decided to [[https://help.goodreads.com/s/article/Does-Goodreads-support-the-use-of-APIs][retire their api]]. This means you won't be able to register for a developer key, and this package straight-up won't work. Sigh. I'm gonna archive the repo.
#+end_quote

this package allows you to manage goodreads from within your emacs.

* requirements
- [[https://github.com/psanford/emacs-oauth][emacs-oauth]]: not the one thatâ€™s included with emacs, since that one uses oauth 2 but goodreads needs oauth 1
- =cl=: should be included with emacs: =(require â€™cl)=
- [[https://github.com/abo-abo/swiper][ivy / counsel]]: for completion. optional.

* authorizing
in order to use this package, youâ€™ll have to register your app with goodreads. go [[https://www.goodreads.com/api/keys][here]] and register. youâ€™ll get a public key thatâ€™s 22 characters long and a secret thatâ€™s 40 characters long.

next =(setq goodreads-my-key "your_key_here")= and =(setq goodreads-my-secret "your_secret_here")=.

=goodreads-el= provides a function called =goodreads-oauth-authorize=. this function uses =goodreads-my-key= and =goodreads-my-secret= to request an access token from the goodreads servers. so that you donâ€™t have to re-authorize every time, =goodreads-oauth-authorize= will serialize the token and store it at a location defined by the variable =goodreads-token-location= (by default, =~/.goodreads-el-token=. you can use =setq= prior to calling =goodreads-oauth-authorize= to change it).

after youâ€™ve set =goodreads-my-key=, =goodreads-my-secret=, and optionally =goodreads-token-location=, you can =M-x goodreads-oauth-authorize=.

if all goes well, then your token should be stored in the variable =goodreads-access-token=. youâ€™ll have to re-run this function every time you restart emacs. in order to avoid this, you could put =(goodreads-oauth-authorize)= in your init file.

if you get an error that some function in =oauth= has a value of nil, then do =C-h f make-oauth-access-token= and click the link that takes you to =oauth.el= and then run =M-x eval-buffer= in it.

next, you have to retrieve your unique user id from the goodreads servers to be able to write. this requires =goodreads-oauth-authorize= first. run =M-x goodreads-get-user-id=. if all goes well, your user id should be in the variable =goodreads-my-id=.

* features
=goodreads-el= exposes two functions that you can use.

** =(goodreads-shelves)=
use this to select a shelf. after selecting a shelf, the books in that shelf will come up. you can =RET= on one of them (behind the scenes, this runs =goodreads-book-action=) to move to a shelf  or view on goodreads.com.

** =(goodreads-search-books (query))=
searches for =QUERY=. you can =RET= on a book to bring up a menu where you can add it to a shelf or view it on goodreads.com.

* why canâ€™t i edit my review for a book or rate a book?
unfortunately, while the [[https://www.goodreads.com/api/index#review.edit][api]] ostensibly supports editing a review, the methodâ€™s broken right now ðŸ˜”. iâ€™ve opened an [[https://www.goodreads.com/topic/show/21654356-add-review-giving-me-401-not-authorized-but-only-with-optional-params][issue]] on the goodreads forums. the api is creaky and old and iâ€™m not sure when or if this will be fixed. until this is fixed, i donâ€™t see this package supporting editing reviews (although all the work on my end is already done; you can see in the source code the function =goodreads-edit-review= and the commented-out code in =goodreads-book-action=). 
